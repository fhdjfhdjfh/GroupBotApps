# –∏–º–ø–æ—Ä—Ç
import telebot as tb
from telebot import types
import random as rand

# –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–æ—Ç—É
bot = tb.TeleBot('7705755205:AAFeOIgU8OHxJTDK0NMx9timoqvy4YHtWAo')

# –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
members = {}
games_sorn = {}
games_sorn2 = {}
st1 = open('save_stars.txt')
st2 = open('save_stars2.txt')
sorn_elements = {'–ö–æ—à–∫–∞': False, '–Ø–±–ª–æ–∫–æ':True, '–°—ã—Ä':True, '–õ–æ—Å—å':False, '–õ–µ—â':True, '–°–æ–∫':True, '–í–æ–¥–∞':True, '–ó–º–µ—è':False, '–Å–ª–∫–∞':False, '–¢—ã':False, '–†—ã–±–∞':True, '–ò–∫—Ä–∞':True, '–°–∞–ø–æ–≥':False, '–ë–æ—Ç':False, '–°–∞–º–æ–ª—ë—Ç':False, '–ö–∞–º–µ–Ω—å':False, '–ë–∞—Ç–∞—Ä–µ–π–∫–∞':False, '–ë–∞–Ω–∞–Ω':True}
sorn_elements2 = ['–ö–æ—à–∫–∞','–Ø–±–ª–æ–∫–æ','–°—ã—Ä','–õ–æ—Å—å','–õ–µ—â','–°–æ–∫','–í–æ–¥–∞','–ó–º–µ—è','–Å–ª–∫–∞','–¢—ã','–†—ã–±–∞','–ò–∫—Ä–∞','–°–∞–ø–æ–≥','–ë–æ—Ç','–°–∞–º–æ–ª—ë—Ç','–ö–∞–º–µ–Ω—å','–ë–∞—Ç–∞—Ä–µ–π–∫–∞','–ë–∞–Ω–∞–Ω']
stars = {}
stars2 = {}
stars3 = {} # –ì–ª–∞–≤–Ω—ã–µ –ó–≤—ë–∑–¥—ã
stars4 = {}
one = ['–ö–æ—à–∫–∞', '–°–æ–±–∞–∫–∞', '–ö—Ä—ã—Å–∞', '–°—Ç–æ–ª', '–õ–æ—Å—å', '–ü–µ–∫–∞—Ä—å', '–ë–∞—Ä–∞–Ω', '–ë–æ—Ç', '–ö–æ–º–ø—å—é—Ç–µ—Ä', '–ë–∞–Ω–∫–∞', '–õ–∏—Å–∞', '–ù–æ–∂–Ω–∏—Ü—ã', '–î–æ–º']
two = ['–∏—â–µ—Ç', '—Ä–æ–µ—Ç', '–ª—å—ë—Ç', '—Ç—ã–∫–∞–µ—Ç', '—Ä–∏—Å—É–µ—Ç', '–ø–∏—à–µ—Ç', '–ª–∏–∂–µ—Ç', '–ø—Ä—ã–≥–∞–µ—Ç', '–∏–≥—Ä–∞–µ—Ç –Ω–∞ –ø–∏–∞–Ω–∏–Ω–æ', '–∏–≥—Ä–∞–µ—Ç –≤']
three = ['–∫–æ—Ç–∏–∫–∞', '–∫—Ä–æ—Ç–∏–∫–∞', '—ë–ª–æ—á–∫—É', '—Ç–µ–ª–µ–≥—Ä–∞–º', '–±–æ—Ç–∏–∫–∞', '—Ç–µ–ª–µ—Ñ–æ–Ω', '—à–∞—Ä–∏–∫', '—Ä—ã–±–∫—É', '—Ñ–ª–æ–º–∞—Å—Ç–µ—Ä', '–∏–≥–ª—É', '–ª–µ–Ω—Ç—É']
four = ['–≤ —Ç—É–∞–ª–µ—Ç–µ', '–Ω–∞ –≤–æ–¥–µ', '–≤ —Ä–∞–∫–µ—Ç–µ', '–≤ –ø–∏–∫—Å–µ–ª–µ', '–≤ –∂–µ–ª—É–¥–∫–µ', '–Ω–∞ —Ç–∞–±–ª–µ—Ç–∫–µ', '–≤ —É—á–µ–±–Ω–∏–∫–µ', '–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–µ', '–≤ –ø—Ä–æ–≤–æ–¥–µ']

# —Ñ—É–Ω–∫—Ü–∏—è '/start'
@bot.message_handler(commands=['start'])
def start_bot(mess):
    id = mess.chat.id
    hello_mess = '<b>–í—Å–µ–º</b> –ø—Ä–∏–≤–µ—Çüñê! –í —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ –±–æ—Ç-–∞–¥–º–∏–Ω. –£ –º–µ–Ω—è –µ—Å—Ç—å —Ç–∞–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n  /chepuha\n  /groupgames :\n    /vsbot\n    /vsgroup\n    /samzasebya\n    /sorn\n    /englesh :\n      /rlub\n      /veg'
    markup = types.ReplyKeyboardMarkup()
    key1 = types.KeyboardButton(text='‚ûï–ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –∏–≥—Ä–∞—Ö')
    key2 = types.KeyboardButton(text='‚ûñ–ù–µ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –∏–≥—Ä–∞—Ö')
    markup.add(key1, key2)
    bot.send_message(id, hello_mess, parse_mode='html', reply_markup=markup)
    members.update({id : []})
    stars.update({mess.chat.id : {}})
    stars2.update({mess.chat.id : []})
    try:
        stars4[mess.chat.id]
    except:
        stars3.update({mess.chat.id : {}})
        stars4.update({mess.chat.id : []})

# —Ñ—É–Ω–∫—Ü–∏—è '/chepuha'
@bot.message_handler(commands=['chepuha'])
def chepuha_bot(mess):
    ch_mess = rand.choice(one)+' '+rand.choice(two)+' '+rand.choice(three)+' '+rand.choice(four)+'.'
    markup = types.ReplyKeyboardMarkup()
    bot.send_message(mess.chat.id, ch_mess, parse_mode='html', reply_markup=markup)

# —Ñ—É–Ω–∫—Ü–∏—è '/groupgames'
@bot.message_handler(commands=['groupgames'])
def groupgames_bot(mess):
    id = mess.chat.id
    games_mess = '–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É:\n/vsbot\n/vsgroup\n/samzasebya\n/sorn\n/englesh :\n  /rlub\n  /veg'
    markup = types.ReplyKeyboardMarkup()
    bot.send_message(id, games_mess, parse_mode='html', reply_markup=markup)

# —Ñ—É–Ω–∫—Ü–∏–ò '/groupgames'
commands = ['vsbot', 'vsgroup', 'samzasebya', 'sorn']
@bot.message_handler(commands=['sorn'])
def game(mess):
    global in_sorn
    message = '<b>/sorn</b> -\n–∏–≥—Ä–∞ "–°—ä–µ–¥–æ–±–Ω–æ–µ –∏–ª–∏ –Ω–µ—Ç".\n–ó–≤—É—á–∏—Ç –ø—Ä–æ—Å—Ç–æ, –Ω–æ –µ—Å–ª–∏ –≤ –≥—Ä—É–ø–ø–µ –º–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤...ü´•\n–î–µ–ª–æ –≤ —Ç–æ–ºüòÇ, —á—Ç–æ –∫—Ç–æ –±—ã—Å—Ç—Ä–µ–µ –¥—Ä—É–≥–∏—Ö –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç —Ç–æ—Ç –ø–æ–±–µ–¥–∏—Ç.\n–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –∑–∞—Ä–∞–±–æ—Ç–∞–µ—Ç –∑–≤–µ–∑–¥—Éü§©.\n–ù–∞—á–Ω—ë–º?'
    markup = types.ReplyKeyboardMarkup()
    key1 = types.KeyboardButton(text='–î–∞')
    key2 = types.KeyboardButton(text='–ù–µ—Ç')
    markup.add(key1, key2)
    bot.send_message(mess.chat.id, message, parse_mode='html', reply_markup=markup)
    games_sorn.update({mess.chat.id : True})
    try:
        stars[mess.chat.id].update({mess.from_user.id : 0})
        stars2[mess.chat.id].append(mess.from_user.id)
    except:
        stars.update({mess.chat.id : {}})
        stars2.update({mess.chat.id : []})
        stars[mess.chat.id].update({mess.from_user.id : 0})
        stars2[mess.chat.id].append(mess.from_user.id)
    
# —Ñ—É–Ω–∫—Ü–∏—è '/vsbot'
@bot.message_handler(commands=['vsbot'])
def vsbot_bot(mess):
    id = mess.chat.id
    instruction = '–ü—Ä–∞–≤–∏–ª–∞:\n–ë–æ—Ç –≤—ã–±–∏—Ä–∞–µ—Ç '+str(bot.get_chat_members_count)+' –∏–≥—Ä–æ–∫–æ–≤.'

# inline mode
@bot.inline_handler(func=lambda query: True)
def inline(query):
    text = query.query
    ReturnText = '–í—ã –Ω–µ –≤—Å—ë —Å–¥–µ–ª–∞–ª–∏'
    description = '–ó–∞–π–º—ã'
    if text == '':
        title = '–í–≤–µ–¥–∏—Ç–µ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é: —Ü–µ–Ω–∞, username –≤–∞—à–µ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞, username –≥—Ä—É–ø–ø—ã'
    else:
        try:
            error = 0
            List = eval('['+text+']')
            '''try:
                List = eval('['+text+']')
            except:
                pass
            
            error = 1
            List[0] + 1
            
            error = 2
            if len(List) >= 2:
                List[1] + 'a'
            
            error = 3
            if len(List) >= 3:
                List[2] + 'a'
            
            error = 4
            if len(List) >= 2:
                None
            
            error = 5
            if len(List) >= 3:
                bot.get_chat(List[2])
            
            error = 6
            if len(List) >= 3:
                bot.get_chat_member(List[2], List[1])'''
            if len(List) == 3:
                title = '–ì–æ—Ç–æ–≤–æ'
                ReturnText = '–Ø —Ö–æ—á—é –≤–∑—è—Ç—å —É —Ç–µ–±—è –∑–∞–π–º—ã —Ü–µ–Ω–æ–π ü§©'+str(List[0])+' –≤ –≥—Ä—É–ø–ø–µ '+bot.get_chat(List[2]).title+'.'
            else:
                title = '–ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ'
        except Exception as e:
            print(e)
            title = '–û—à–∏–±–æ—á–∫–∞! '
            if error == 0:
                title += '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞'
            elif error == 1:
                title += '–¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º'
            elif error == 2:
                title += 'Username, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –∫–∞–≤—ã—á–∫–∞—Ö'
            elif error == 3:
                title += 'Username, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –∫–∞–≤—ã—á–∫–∞—Ö'
            elif error == 4:
                title += '–ù–µ –Ω–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
            elif error == 5:
                title += '–ù–µ –Ω–∞–π–¥–µ–Ω–∞ –≥—Ä—É–ø–ø–∞'
            elif error == 6:
                title += '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–∞–∂–µ –Ω–µ –ø—ã—Ç–∞–ª—Å—è –ø–æ–ª—É—á–∏—Ç—å –∑–≤—ë–∑–¥—ã'
    answer = [types.InlineQueryResultArticle(
        id = '1',
        title = title,
        description = description,
        input_message_content = types.InputTextMessageContent(message_text=ReturnText))]
    bot.answer_inline_query(query.id, answer)

# –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–∞–ø–∏—Å–∞–ª–∏
@bot.message_handler(func=lambda m:True)
def write(mess):
    if mess.text == '‚ûï–ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –∏–≥—Ä–∞—Ö':
        print('‚ûï–ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –∏–≥—Ä–∞—Ö')
        NewMember = mess.from_user.id
        print(NewMember)
        plas = True
        try:
            for member in members[mess.chat.id]:
                if member == NewMember:
                    plas = False
        except:
            members.update({mess.chat.id : []})
            for member in members[mess.chat.id]:
                if member == NewMember:
                    plas = False
        if plas:
            try:
                NewListMembers = members[mess.chat.id]
                NewListMembers.append(NewMember)
                members.update({mess.chat.id : NewListMembers})
            except:
                members.update({mess.chat.id : []})
                NewListMembers = members[mess.chat.id]
                NewListMembers.append(NewMember)
                members.update({mess.chat.id : NewListMembers})
            pl = '@'+mess.from_user.username+' –±—É–¥–µ—Ç <b>—É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∏–≥—Ä–∞—Ö</b>.\n\n–í —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ —É—á–∞—Å—Ç–≤—É—é—Ç –≤ –∏–≥—Ä–∞—Ö:\n'
            i = 0
            for member in members[mess.chat.id]:
                i += 1
                pl += '@'+bot.get_chat_member(mess.chat.id, member).user.username
                if i == len(members[mess.chat.id]):
                    pl += '.'
                else:
                    pl += ';\n'
            markup = types.InlineKeyboardMarkup()
            bot.send_message(mess.chat.id, pl, parse_mode='html', reply_markup=markup)
        else:
            pl = '@'+mess.from_user.username+' <b>—É–∂–µ</b> —É—á–∞—Å—Ç–≤—É–µ—Ç –≤ –∏–≥—Ä–∞—Ö.'
            markup = types.InlineKeyboardMarkup()
            bot.send_message(mess.chat.id, pl, parse_mode='html', reply_markup=markup)
    elif mess.text == '‚ûñ–ù–µ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –∏–≥—Ä–∞—Ö':
        try:
            members[mess.chat.id].pop(members[mess.chat.id].index(mess.from_user.id))
            delete_mess = '@'+mess.from_user.username+' <b>–Ω–µ –±—É–¥–µ—Ç</b> —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∏–≥—Ä–∞—Ö.'
            markup = types.InlineKeyboardMarkup()
            bot.send_message(mess.chat.id, delete_mess, parse_mode='html', reply_markup=markup)
        except:
            delete_mess = '@'+mess.from_user.username+' <b>–∏—Ç–∞–∫ –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç</b> –≤ –∏–≥—Ä–∞—Ö.'
            markup = types.InlineKeyboardMarkup()
            bot.send_message(mess.chat.id, delete_mess, parse_mode='html', reply_markup=markup)
    try:
        if games_sorn[mess.chat.id]:
            if mess.text == '–î–∞':
                message = '–•–æ—Ä–æ—à–æ, —Ç–æ–≥–¥–∞ –Ω–∞—á–Ω—ë–º.\n(–ß—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å, –Ω–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏üëá.)'
                markup = types.ReplyKeyboardMarkup()
                key1 = types.KeyboardButton(text='–°—ä–µ–¥–æ–±–Ω–æ–µ')
                key2 = types.KeyboardButton(text='–ù–µ—Å—ä–µ–¥–æ–±–Ω–æ–µ')
                markup.add(key1, key2)
                bot.send_message(mess.chat.id, message, parse_mode='html', reply_markup=markup)
                #games_sorn.update({mess.chat.id : True})
                startElem = rand.choice(sorn_elements2)
                games_sorn2.update({mess.chat.id : {'whatNum' : 0, 'what' : startElem}})
                markup = types.ReplyKeyboardMarkup()
                bot.send_message(mess.chat.id, startElem, parse_mode='html', reply_markup=markup)
            if mess.text == '–°—ä–µ–¥–æ–±–Ω–æ–µ' or mess.text == '–ù–µ—Å—ä–µ–¥–æ–±–Ω–æ–µ':
                iffer = True
                markup = types.InlineKeyboardMarkup()
                for i in stars2[mess.chat.id]:
                    if i == mess.from_user.id:
                        iffer = False
                if iffer:
                    stars[mess.chat.id].update({mess.from_user.id : 0})
                    stars2[mess.chat.id].append(mess.from_user.id)
                iffer = True
                for i in stars4[mess.chat.id]:
                    if i == mess.from_user.id:
                        iffer = False
                if iffer:
                    stars3[mess.chat.id].update({mess.from_user.id : 0})
                    stars4[mess.chat.id].append(mess.from_user.id)
                startElem = rand.choice(sorn_elements2)
                doljno = sorn_elements[startElem]
                if doljno:
                    doljno2 = '–°—ä–µ–¥–æ–±–Ω–æ–µ'
                else:
                    doljno2 = '–ù–µ—Å—ä–µ–¥–æ–±–Ω–æ–µ'
                if doljno2 == mess.text:
                    stars[mess.chat.id][mess.from_user.id] += 1
                    print(stars)
                for i in stars2[mess.chat.id]:
                    if stars[mess.chat.id][i] == 20:
                        try:
                            stars3[mess.chat.id][i] += 1
                        except:
                            stars3.update({mess.chat.id : {}})
                        print(stars3)
                        games_sorn[mess.chat.id] = False
                        startElem = '–°—Ç–æ–ø –∏–≥—Ä–∞. –ó–≤—ë–∑–¥—ã:\n'
                        for i in stars4[mess.chat.id]:
                            print(i)
                            try:
                                startElem += '@'+bot.get_chat_member(mess.chat.id, i).user.username+': ü§©'+str(stars3[mess.chat.id][i])+'\n'
                            except Exception as E:
                                print(E)
                        markup = types.InlineKeyboardMarkup()
                        startElem += '–ú–æ–∂–µ—Ç–µ –∑–∞–π—Ç–∏ –º–∞–≥–∞–∑–∏–Ω / –ø–æ–¥–∞—Ä–∫–∏ –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤–Ω–∏–∑—É'
                        key = types.InlineKeyboardButton(text = '–º–∞–≥–∞–∑–∏–Ω / –ø–æ–¥–∞—Ä–∫–∏', callback_data=str(mess.chat.id))
                        markup.add(key)
                games_sorn2.update({mess.chat.id : {'whatNum' : 0, 'what' : startElem}})
                try:
                    bot.send_message(mess.chat.id, startElem, parse_mode='html', reply_markup=markup)
                except Exception as d:
                    print(d)
            elif mess.text == '–ù–µ—Ç':
                message = '–•–æ—Ä–æ—à–æ'
                markup = types.ReplyKeyboardMarkup()
                bot.send_message(mess.chat.id, message, parse_mode='html', reply_markup=markup)
                games_sorn.update({mess.chat.id : False})

    except:
        pass

# –µ—Å–ª–∏ –Ω–∞–∂–∞–ª–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É
@bot.callback_query_handler(func=lambda call:True)
def button_bot(fc):
    mess = fc.message
    print('but')
    data = ''
    data2 = []
    for i in fc.data:
        data2.append(i)
    try:
        data = data2[0]+data2[1]+data2[2]+data2[3]+data2[4]+data2[5]+data2[6]
    except:
        pass
    if data == 'Podarok':
        chat_id = ''
        for i in range(7, len(data2)):
            chat_id += data2[i]
        chat_id = int(chat_id)
        markup = types.InlineKeyboardMarkup()
        for i in stars2[chat_id]:
            bt = bot.get_chat_member(chat_id, i).user.first_name
            key = types.InlineKeyboardButton(text=bt, callback_data='User['+str(i)+', '+str(chat_id)+']')
            markup.add(key)
        bot.edit_message_text(text='üéÅ–ü–æ–¥–∞—Ä–æ–∫\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≥–æ, –∫–æ–º—É —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∞—Ä–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫', chat_id=fc.from_user.id, message_id=mess.id, reply_markup=markup)
    data = ''
    data2 = []
    for i in fc.data:
        data2.append(i)
    try:
        data = data2[0]+data2[1]+data2[2]+data2[3]
    except:
        pass
    if data == 'User':
        list_id = ''
        for i in range(4, len(data2)):
            list_id += data2[i]
        list_id = eval(list_id)
        key = int(stars3[list_id[1]][list_id[0]]/2)
        markup = types.InlineKeyboardMarkup(row_width=4)
        list_id.append(key)
        key1 = types.InlineKeyboardButton(text='+ü§©1', callback_data='+e'+str(list_id))
        key2 = types.InlineKeyboardButton(text='-ü§©1', callback_data='-e'+str(list_id))
        key3 = types.InlineKeyboardButton(text='+ü§©10', callback_data='+d'+str(list_id))
        key4 = types.InlineKeyboardButton(text='-ü§©10', callback_data='-d'+str(list_id))
        key5 = types.InlineKeyboardButton(text='–ì–æ—Ç–æ–≤–æ', callback_data='Go'+str(list_id))
        markup.add(key1, key2, key3, key4, key5)
        message = '–•–æ—Ä–æ—à–æ, –í—ã –¥–∞—Ä–∏—Ç–µ –ø–æ–¥–∞—Ä–æ–∫ '+bot.get_chat_member(list_id[1], list_id[0]).user.first_name+'.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤—ë–∑–¥:\nü§©'+str(key)
        bot.edit_message_text(text=message, chat_id=fc.from_user.id, message_id=mess.id, reply_markup=markup)

    data = ''
    data2 = []
    for i in fc.data:
        data2.append(i)
    try:
        data = data2[0]+data2[1]
    except:
        pass
    print(data)
    if data == '+e':
        list_id = ''
        for i in range(2, len(data2)):
            list_id += data2[i]
        list_id = eval(list_id)
        key = list_id[2]+1
        list_id[2] += 1
        markup = types.InlineKeyboardMarkup(row_width=4)
        key1 = types.InlineKeyboardButton(text='+ü§©1', callback_data='+e'+str(list_id))
        key2 = types.InlineKeyboardButton(text='-ü§©1', callback_data='-e'+str(list_id))
        key3 = types.InlineKeyboardButton(text='+ü§©10', callback_data='+d'+str(list_id))
        key4 = types.InlineKeyboardButton(text='-ü§©10', callback_data='-d'+str(list_id))
        key5 = types.InlineKeyboardButton(text='–ì–æ—Ç–æ–≤–æ', callback_data='Go'+str(list_id))
        markup.add(key1, key2, key3, key4, key5)
        message = '–•–æ—Ä–æ—à–æ, –í—ã –¥–∞—Ä–∏—Ç–µ –ø–æ–¥–∞—Ä–æ–∫ '+bot.get_chat_member(list_id[1], list_id[0]).user.first_name+'.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤—ë–∑–¥:\nü§©'+str(key)
        bot.edit_message_text(text=message, chat_id=fc.from_user.id, message_id=mess.id, reply_markup=markup)
    if data == '-e':
        list_id = ''
        for i in range(2, len(data2)):
            list_id += data2[i]
        list_id = eval(list_id)
        key = list_id[2]-1
        list_id[2] -= 1
        markup = types.InlineKeyboardMarkup(row_width=4)
        key1 = types.InlineKeyboardButton(text='+ü§©1', callback_data='+e'+str(list_id))
        key2 = types.InlineKeyboardButton(text='-ü§©1', callback_data='-e'+str(list_id))
        key3 = types.InlineKeyboardButton(text='+ü§©10', callback_data='+d'+str(list_id))
        key4 = types.InlineKeyboardButton(text='-ü§©10', callback_data='-d'+str(list_id))
        key5 = types.InlineKeyboardButton(text='–ì–æ—Ç–æ–≤–æ', callback_data='Go'+str(list_id))
        markup.add(key1, key2, key3, key4, key5)
        message = '–•–æ—Ä–æ—à–æ, –í—ã –¥–∞—Ä–∏—Ç–µ –ø–æ–¥–∞—Ä–æ–∫ '+bot.get_chat_member(list_id[1], list_id[0]).user.first_name+'.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤—ë–∑–¥:\nü§©'+str(key)
        bot.edit_message_text(text=message, chat_id=fc.from_user.id, message_id=mess.id, reply_markup=markup)
    if data == '+d':
        list_id = ''
        for i in range(2, len(data2)):
            list_id += data2[i]
        list_id = eval(list_id)
        key = list_id[2]+10
        list_id[2] += 10
        markup = types.InlineKeyboardMarkup(row_width=4)
        key1 = types.InlineKeyboardButton(text='+ü§©1', callback_data='+e'+str(list_id))
        key2 = types.InlineKeyboardButton(text='-ü§©1', callback_data='-e'+str(list_id))
        key3 = types.InlineKeyboardButton(text='+ü§©10', callback_data='+d'+str(list_id))
        key4 = types.InlineKeyboardButton(text='-ü§©10', callback_data='-d'+str(list_id))
        key5 = types.InlineKeyboardButton(text='–ì–æ—Ç–æ–≤–æ', callback_data='Go'+str(list_id))
        markup.add(key1, key2, key3, key4, key5)
        message = '–•–æ—Ä–æ—à–æ, –í—ã –¥–∞—Ä–∏—Ç–µ –ø–æ–¥–∞—Ä–æ–∫ '+bot.get_chat_member(list_id[1], list_id[0]).user.first_name+'.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤—ë–∑–¥:\nü§©'+str(key)
        bot.edit_message_text(text=message, chat_id=fc.from_user.id, message_id=mess.id, reply_markup=markup)
    if data == '-d':
        list_id = ''
        for i in range(2, len(data2)):
            list_id += data2[i]
        list_id = eval(list_id)
        key = list_id[2]-10
        list_id[2] -= 10
        markup = types.InlineKeyboardMarkup(row_width=4)
        key1 = types.InlineKeyboardButton(text='+ü§©1', callback_data='+e'+str(list_id))
        key2 = types.InlineKeyboardButton(text='-ü§©1', callback_data='-e'+str(list_id))
        key3 = types.InlineKeyboardButton(text='+ü§©10', callback_data='+d'+str(list_id))
        key4 = types.InlineKeyboardButton(text='-ü§©10', callback_data='-d'+str(list_id))
        key5 = types.InlineKeyboardButton(text='–ì–æ—Ç–æ–≤–æ', callback_data='Go'+str(list_id))
        markup.add(key1, key2, key3, key4, key5)
        message = '–•–æ—Ä–æ—à–æ, –í—ã –¥–∞—Ä–∏—Ç–µ –ø–æ–¥–∞—Ä–æ–∫ '+bot.get_chat_member(list_id[1], list_id[0]).user.first_name+'.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤—ë–∑–¥:\nü§©'+str(key)
        bot.edit_message_text(text=message, chat_id=fc.from_user.id, message_id=mess.id, reply_markup=markup)
    if data == 'Go':
        list_id = ''
        for i in range(2, len(data2)):
            list_id += data2[i]
        list_id = eval(list_id)
        if list_id[2] > 0 and stars3[list_id[1]][fc.from_user.id] >= list_id[2]:
            stars3[list_id[1]][list_id[0]] += list_id[2]
            stars3[list_id[1]][fc.from_user.id] -= list_id[2]
            message = '–ü–æ–¥–∞—Ä–æ–∫ '+bot.get_chat_member(list_id[1], list_id[0]).user.first_name+':\n\n–¶–µ–Ω–∞: ü§©'+str(list_id[2])+'\n–£ –í–∞—Å: '+str(stars3[list_id[1]][fc.from_user.id])+'\n–£ –ø–æ–ª—É—á–∞—Ç–µ–ª—è: '+str(stars3[list_id[1]][list_id[0]])+'\n\n–í—ã –ø–æ–¥–∞—Ä–∏–ª–∏ –ø–æ–¥–∞—Ä–æ–∫!'
            markup = types.InlineKeyboardMarkup()
            key = types.InlineKeyboardButton(text='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–∞–≥–∞–∑–∏–Ω / –ø–æ–¥–∞—Ä–∫–∏', callback_data=str(list_id[1]))
            markup.add(key)
            bot.edit_message_text(text=message, chat_id=fc.from_user.id, message_id=mess.id, reply_markup=markup)
    if data == 'Za':
        chat_id = ''
        for i in range(2, len(data2)):
            chat_id += data2[i]
        chat_id = int(chat_id)
        message = '–ß—Ç–æ–±—ã –≤–∑—è—Ç—å –∑–∞–π–º—ã:\n‚Ä¢–ó–∞–π–¥–∏—Ç–µ –≤ —á–∞—Ç —Ç–æ–≥–æ, —É –∫–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –≤–∑—è—Ç—å –∑–∞–π–º—ã\n‚Ä¢–ù–∞–ø–∏—à–∏—Ç–µ @gR6vjHdQ013bot\n‚Ä¢–î–∞–ª–µ–µ –Ω–∞–ø–∏—à–∏—Ç–µ —Ç–∞–∫: —Ü–µ–Ω–∞, username –≤–∞—à–µ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞, username –≥—Ä—É–ø–ø—ã\n‚Ä¢–ù–∞–∂–º–∏—Ç–µ –Ω–∞ "–≥–æ—Ç–æ–≤–æ"'
        markup = types.InlineKeyboardMarkup()
        key = types.InlineKeyboardButton(text='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–∞–≥–∞–∑–∏–Ω / –ø–æ–¥–∞—Ä–∫–∏', callback_data=str(chat_id))
        markup.add(key)
        bot.edit_message_text(text=message, chat_id=fc.from_user.id, message_id=mess.id, reply_markup=markup)
    try:
        int(fc.data)
        message = 'üë§'+fc.from_user.first_name
        if fc.from_user.last_name != None:
            message += ' '+fc.from_user.last_name
        message += '\nü§©–ó–≤—ë–∑–¥—ã: '
        try:
            message += str(stars3[int(fc.data)][fc.from_user.id])
        except Exception as e:
            message += '0'
            print(e)
        message += '\n\nüéÅ–ü–æ–¥–∞—Ä–æ–∫\nü§ù–ó–∞–π–º—ã\nüë§–ê–≤–∞—Ç–∞—Ä'
        markup = types.InlineKeyboardMarkup()
        key1 = types.InlineKeyboardButton(text='üéÅ–ü–æ–¥–∞—Ä–æ–∫', callback_data='Podarok'+fc.data)
        key2 = types.InlineKeyboardButton(text='ü§ù–ó–∞–π–º—ã', callback_data='Za'+fc.data)
        markup.add(key1, key2)
        print(fc.from_user.id)
        bot.send_message(fc.from_user.id, message, parse_mode='html', reply_markup=markup)
    except:
        pass
    bot.answer_callback_query(fc.id)
    
bot.polling(none_stop=True)
